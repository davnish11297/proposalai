{"ast":null,"code":"var _jsxFileName = \"/Users/davnishsingh/Documents/proposalai/client/src/pages/Snippets.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { snippetsAPI } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Snippets = () => {\n  _s();\n  const [snippets, setSnippets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchSnippets();\n  }, []);\n  const fetchSnippets = async () => {\n    try {\n      setLoading(true);\n      const response = await snippetsAPI.getAll();\n      setSnippets(response.data.data);\n    } catch (err) {\n      console.error('Failed to fetch snippets:', err);\n      setError('Failed to load snippets');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUseSnippet = async snippet => {\n    try {\n      // Increment usage count\n      await snippetsAPI.incrementUsage(snippet.id);\n\n      // Refresh the snippets list to show updated usage count\n      await fetchSnippets();\n\n      // Navigate to proposal editor with snippet data\n      navigate('/proposals/new', {\n        state: {\n          snippet\n        }\n      });\n      toast.success(`Using snippet: ${snippet.title}`);\n    } catch (err) {\n      console.error('Failed to increment snippet usage:', err);\n      toast.error('Failed to track snippet usage');\n\n      // Still navigate even if usage tracking fails\n      navigate('/proposals/new', {\n        state: {\n          snippet\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-900\",\n        children: \"Content Snippets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\",\n        onClick: () => toast.success('Add Snippet feature coming soon!'),\n        children: \"Add Snippet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8 text-gray-500\",\n      children: \"Loading snippets...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8 text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : snippets.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8 text-gray-500\",\n      children: \"No snippets found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: snippets.map(snippet => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-gray-900 mb-2\",\n          children: snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-sm mb-4\",\n          children: snippet.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-1 mb-4\",\n          children: snippet.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded\",\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500\",\n            children: [\"Used \", snippet.usageCount, \" times\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700\",\n            onClick: () => handleUseSnippet(snippet),\n            children: \"Use Snippet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, snippet.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Snippets, \"VYQTgsucHOh6zv58GnNSCAJ5Cb8=\", false, function () {\n  return [useNavigate];\n});\n_c = Snippets;\nexport default Snippets;\nvar _c;\n$RefreshReg$(_c, \"Snippets\");","map":{"version":3,"names":["React","useState","useEffect","toast","snippetsAPI","useNavigate","jsxDEV","_jsxDEV","Snippets","_s","snippets","setSnippets","loading","setLoading","error","setError","navigate","fetchSnippets","response","getAll","data","err","console","handleUseSnippet","snippet","incrementUsage","id","state","success","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","content","tags","tag","usageCount","_c","$RefreshReg$"],"sources":["/Users/davnishsingh/Documents/proposalai/client/src/pages/Snippets.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { snippetsAPI } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Snippet {\n  id: string;\n  title: string;\n  content: string;\n  category: string;\n  tags: string[];\n  usageCount: number;\n  isActive: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\nconst Snippets: React.FC = () => {\n  const [snippets, setSnippets] = useState<Snippet[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchSnippets();\n  }, []);\n\n  const fetchSnippets = async () => {\n    try {\n      setLoading(true);\n      const response = await snippetsAPI.getAll();\n      setSnippets(response.data.data);\n    } catch (err) {\n      console.error('Failed to fetch snippets:', err);\n      setError('Failed to load snippets');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleUseSnippet = async (snippet: Snippet) => {\n    try {\n      // Increment usage count\n      await snippetsAPI.incrementUsage(snippet.id);\n      \n      // Refresh the snippets list to show updated usage count\n      await fetchSnippets();\n      \n      // Navigate to proposal editor with snippet data\n      navigate('/proposals/new', { state: { snippet } });\n      \n      toast.success(`Using snippet: ${snippet.title}`);\n    } catch (err) {\n      console.error('Failed to increment snippet usage:', err);\n      toast.error('Failed to track snippet usage');\n      \n      // Still navigate even if usage tracking fails\n      navigate('/proposals/new', { state: { snippet } });\n    }\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">Content Snippets</h1>\n        <button \n          className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          onClick={() => toast.success('Add Snippet feature coming soon!')}\n        >\n          Add Snippet\n        </button>\n      </div>\n\n      {loading ? (\n        <div className=\"text-center py-8 text-gray-500\">Loading snippets...</div>\n      ) : error ? (\n        <div className=\"text-center py-8 text-red-500\">{error}</div>\n      ) : snippets.length === 0 ? (\n        <div className=\"text-center py-8 text-gray-500\">No snippets found</div>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {snippets.map((snippet) => (\n            <div key={snippet.id} className=\"bg-white rounded-lg shadow-md p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{snippet.title}</h3>\n              <p className=\"text-gray-600 text-sm mb-4\">{snippet.content}</p>\n              <div className=\"flex flex-wrap gap-1 mb-4\">\n                {snippet.tags.map((tag) => (\n                  <span key={tag} className=\"bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded\">\n                    {tag}\n                  </span>\n                ))}\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-gray-500\">Used {snippet.usageCount} times</span>\n                <button \n                  className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700\"\n                  onClick={() => handleUseSnippet(snippet)}\n                >\n                  Use Snippet\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Snippets; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}