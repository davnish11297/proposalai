{"ast":null,"code":"export const sendProposalEmail = async emailData => {\n  try {\n    const response = await fetch('/api/proposals/send-email', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        to: emailData.clientEmail,\n        subject: emailData.subject,\n        message: emailData.message,\n        clientName: emailData.clientName,\n        clientEmail: emailData.clientEmail\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to send email');\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Error sending email:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["sendProposalEmail","emailData","response","fetch","method","headers","body","JSON","stringify","to","clientEmail","subject","message","clientName","ok","Error","result","json","error","console"],"sources":["/Users/davnishsingh/Documents/proposalai-main/proposalai/client/src/services/emailService.ts"],"sourcesContent":["export interface EmailData {\n  to: string;\n  subject: string;\n  message: string;\n  clientName: string;\n  clientEmail: string;\n}\n\nexport const sendProposalEmail = async (emailData: EmailData): Promise<void> => {\n  try {\n    const response = await fetch('/api/proposals/send-email', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        to: emailData.clientEmail,\n        subject: emailData.subject,\n        message: emailData.message,\n        clientName: emailData.clientName,\n        clientEmail: emailData.clientEmail\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to send email');\n    }\n\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Error sending email:', error);\n    throw error;\n  }\n}; "],"mappings":"AAQA,OAAO,MAAMA,iBAAiB,GAAG,MAAOC,SAAoB,IAAoB;EAC9E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,EAAE;MACxDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,EAAE,EAAER,SAAS,CAACS,WAAW;QACzBC,OAAO,EAAEV,SAAS,CAACU,OAAO;QAC1BC,OAAO,EAAEX,SAAS,CAACW,OAAO;QAC1BC,UAAU,EAAEZ,SAAS,CAACY,UAAU;QAChCH,WAAW,EAAET,SAAS,CAACS;MACzB,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACY,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC;IAEA,MAAMC,MAAM,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}