{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import{useNavigate}from'react-router-dom';import{BellIcon,ChatBubbleLeftIcon,EyeIcon,CheckCircleIcon,XCircleIcon,UserIcon,ClockIcon}from'@heroicons/react/24/outline';import{notificationAPI}from'../services/api';import toast from'react-hot-toast';import{useAuth}from'../hooks/useAuth';import browserNotificationService from'../services/browserNotifications';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function NotificationBell(){const{user}=useAuth();const navigate=useNavigate();const[notifications,setNotifications]=useState([]);const[unreadCount,setUnreadCount]=useState(0);const[isOpen,setIsOpen]=useState(false);const[loading,setLoading]=useState(false);const[error,setError]=useState(false);// Rate limiting and backoff state\nconst[isRateLimited,setIsRateLimited]=useState(false);const[retryCount,setRetryCount]=useState(0);const lastFetchTime=useRef(0);const intervalRef=useRef(null);const fetchNotifications=useCallback(async()=>{try{setLoading(true);setError(false);setIsRateLimited(false);setRetryCount(0);const response=await notificationAPI.getAll();if(response.data.success){setNotifications(response.data.data);}}catch(error){var _error$response,_error$message;console.error('Failed to fetch notifications:',error);setError(true);// Handle rate limiting\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===429||(_error$message=error.message)!==null&&_error$message!==void 0&&_error$message.includes('Too many requests')){setIsRateLimited(true);// Exponential backoff: wait 2^retryCount minutes\nconst backoffTime=Math.min(Math.pow(2,retryCount)*60000,300000);// Max 5 minutes\nsetTimeout(()=>{setIsRateLimited(false);setRetryCount(prev=>prev+1);},backoffTime);}}finally{setLoading(false);}},[retryCount]);const fetchUnreadCount=useCallback(async()=>{try{// Skip if rate limited\nif(isRateLimited){return;}const response=await notificationAPI.getUnreadCount();if(response.data.success){const newUnreadCount=response.data.data.unreadCount;const previousUnreadCount=unreadCount;setUnreadCount(newUnreadCount);setIsRateLimited(false);setRetryCount(0);// Send browser notification if we have new unread notifications\nif(newUnreadCount>previousUnreadCount&&browserNotificationService.canSendNotifications()){const newNotificationsCount=newUnreadCount-previousUnreadCount;browserNotificationService.sendNotification({title:'New Notifications',body:`You have ${newNotificationsCount} new notification${newNotificationsCount>1?'s':''}`,icon:'/favicon.ico',tag:'new-notifications',data:{navigateTo:'/dashboard'}});}}}catch(error){var _error$response2,_error$message2;console.error('Failed to fetch unread count:',error);// Handle rate limiting\nif(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===429||(_error$message2=error.message)!==null&&_error$message2!==void 0&&_error$message2.includes('Too many requests')){setIsRateLimited(true);// Exponential backoff: wait 2^retryCount minutes\nconst backoffTime=Math.min(Math.pow(2,retryCount)*60000,300000);// Max 5 minutes\nsetTimeout(()=>{setIsRateLimited(false);setRetryCount(prev=>prev+1);},backoffTime);}// Don't set error here as we still want to show the bell\n}},[isRateLimited,retryCount,unreadCount]);useEffect(()=>{if(user){fetchNotifications();fetchUnreadCount();// Poll for new notifications every 2 minutes (120 seconds) instead of 30 seconds\nintervalRef.current=setInterval(()=>{// Only fetch if not rate limited and enough time has passed\nconst now=Date.now();if(!isRateLimited&&now-lastFetchTime.current>60000){// 1 minute minimum between calls\nfetchUnreadCount();fetchNotifications();// Also fetch the full notification list\nlastFetchTime.current=now;}},120000);// 2 minutes\nreturn()=>{if(intervalRef.current){clearInterval(intervalRef.current);}};}},[user,isRateLimited,fetchNotifications,fetchUnreadCount]);const handleNotificationClick=async notification=>{try{console.log('Notification clicked:',notification);// Mark as read first\nawait markAsRead(notification.id);// Close the dropdown\nsetIsOpen(false);// Navigate based on notification type\nswitch(notification.type){case'COMMENT':case'CLIENT_REPLY':if(notification.proposalId){console.log('Navigating to proposal comments:',notification.proposalId);// Navigate to proposal with comments tab\nnavigate(`/proposals/${notification.proposalId}/view?tab=comments`);toast.success('Navigating to comments...');}else{console.log('No proposalId found for comment notification');navigate('/sent-proposals');toast('Proposal not found, showing sent proposals');}break;case'PROPOSAL_OPENED':case'PROPOSAL_APPROVED':case'PROPOSAL_REJECTED':if(notification.proposalId){console.log('Navigating to proposal view:',notification.proposalId);// Navigate to proposal view\nnavigate(`/proposals/${notification.proposalId}/view`);toast.success('Navigating to proposal...');}else{console.log('No proposalId found for proposal notification');navigate('/sent-proposals');toast('Proposal not found, showing sent proposals');}break;case'ACCESS_REQUEST':if(notification.proposalId){console.log('Navigating to proposal activity:',notification.proposalId);// Navigate to proposal with activity tab\nnavigate(`/proposals/${notification.proposalId}/view?tab=activity`);toast.success('Navigating to proposal activity...');}else{console.log('No proposalId found for access request notification');navigate('/sent-proposals');toast('Proposal not found, showing sent proposals');}break;default:console.log('Unknown notification type:',notification.type);navigate('/dashboard');toast('Navigating to dashboard...');}}catch(error){console.error('Error handling notification click:',error);toast.error('Failed to process notification');}};// Test browser notification function\nconst testBrowserNotification=()=>{if(browserNotificationService.canSendNotifications()){browserNotificationService.sendNotification({title:'Test Notification',body:'This is a test browser notification from ProposalAI!',icon:'/favicon.ico',tag:'test-notification',data:{navigateTo:'/dashboard'}});toast.success('Test notification sent!');}else{toast.error('Browser notifications not enabled');}};const markAsRead=async notificationId=>{try{await notificationAPI.markAsRead(notificationId);setNotifications(prev=>prev.map(notif=>notif.id===notificationId?{...notif,read:true}:notif));setUnreadCount(prev=>Math.max(0,prev-1));}catch(error){console.error('Failed to mark notification as read:',error);}};const markAllAsRead=async()=>{try{await notificationAPI.markAllAsRead();setNotifications(prev=>prev.map(notif=>({...notif,read:true})));setUnreadCount(0);toast.success('All notifications marked as read');}catch(error){console.error('Failed to mark all notifications as read:',error);toast.error('Failed to mark notifications as read');}};const getNotificationIcon=type=>{switch(type){case'COMMENT':return/*#__PURE__*/_jsx(ChatBubbleLeftIcon,{className:\"h-5 w-5 text-blue-500\"});case'PROPOSAL_OPENED':return/*#__PURE__*/_jsx(EyeIcon,{className:\"h-5 w-5 text-green-500\"});case'PROPOSAL_APPROVED':return/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"h-5 w-5 text-green-600\"});case'PROPOSAL_REJECTED':return/*#__PURE__*/_jsx(XCircleIcon,{className:\"h-5 w-5 text-red-500\"});case'CLIENT_REPLY':return/*#__PURE__*/_jsx(UserIcon,{className:\"h-5 w-5 text-purple-500\"});case'ACCESS_REQUEST':return/*#__PURE__*/_jsx(UserIcon,{className:\"h-5 w-5 text-orange-500\"});default:return/*#__PURE__*/_jsx(BellIcon,{className:\"h-5 w-5 text-gray-500\"});}};const formatTimeAgo=dateString=>{const date=new Date(dateString);const now=new Date();const diffInMinutes=Math.floor((now.getTime()-date.getTime())/(1000*60));if(diffInMinutes<1)return'Just now';if(diffInMinutes<60)return`${diffInMinutes}m ago`;if(diffInMinutes<1440)return`${Math.floor(diffInMinutes/60)}h ago`;return`${Math.floor(diffInMinutes/1440)}d ago`;};return/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{const newIsOpen=!isOpen;setIsOpen(newIsOpen);// If opening the dropdown, refresh notifications immediately\nif(newIsOpen&&user&&!isRateLimited){fetchNotifications();fetchUnreadCount();}},className:`relative p-2 rounded-lg transition-colors ${isRateLimited?'text-yellow-600 hover:text-yellow-700 hover:bg-yellow-50':'text-gray-600 hover:text-gray-700 hover:bg-gray-100'}`,title:isRateLimited?\"Rate limited - notifications temporarily unavailable\":user?\"Notifications\":\"Login to see notifications\",children:[/*#__PURE__*/_jsx(BellIcon,{className:\"h-6 w-6\"}),user&&unreadCount>0&&!isRateLimited&&/*#__PURE__*/_jsx(\"span\",{className:\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center font-medium\",children:unreadCount>99?'99+':unreadCount}),isRateLimited&&/*#__PURE__*/_jsx(\"span\",{className:\"absolute -bottom-1 -right-1 bg-yellow-500 text-white text-xs rounded-full h-3 w-3 flex items-center justify-center\",children:\"\\u23F1\"}),error&&!isRateLimited&&/*#__PURE__*/_jsx(\"span\",{className:\"absolute -bottom-1 -right-1 bg-yellow-400 text-white text-xs rounded-full h-3 w-3 flex items-center justify-center\",children:\"!\"})]}),isOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50 max-h-96 overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-4 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Notifications\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[!isRateLimited&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{fetchNotifications();fetchUnreadCount();},disabled:loading,className:`p-1 transition-colors ${loading?'text-gray-300 cursor-not-allowed':'text-gray-400 hover:text-gray-600'}`,title:\"Refresh notifications\",children:/*#__PURE__*/_jsx(\"svg\",{className:`h-4 w-4 ${loading?'animate-spin':''}`,fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"})})}),unreadCount>0&&!isRateLimited&&/*#__PURE__*/_jsx(\"button\",{onClick:markAllAsRead,className:\"text-sm text-blue-600 hover:text-blue-700 font-medium\",children:\"Mark all read\"})]})]}),isRateLimited&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-yellow-50 border-b border-yellow-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 text-yellow-800\",children:[/*#__PURE__*/_jsx(ClockIcon,{className:\"h-4 w-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium\",children:\"Rate limited\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-yellow-600 mt-1\",children:\"Too many requests. Notifications will resume automatically in a few minutes.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"max-h-80 overflow-y-auto\",children:loading?/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mx-auto\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2\",children:\"Loading notifications...\"})]}):notifications.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(BellIcon,{className:\"h-8 w-8 mx-auto mb-2 text-gray-300\"}),/*#__PURE__*/_jsx(\"p\",{children:!user?'Please login to see notifications':isRateLimited?'Notifications temporarily unavailable':error?'Unable to load notifications':'No notifications yet'}),error&&!isRateLimited&&/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-400 mt-1\",children:\"Check console for details\"}),isRateLimited&&/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-yellow-600 mt-1\",children:\"Please wait a few minutes\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"divide-y divide-gray-100\",children:notifications.map(notification=>/*#__PURE__*/_jsx(\"div\",{className:`p-4 hover:bg-blue-50 transition-colors cursor-pointer border-l-4 ${!notification.read?'bg-blue-50 border-l-blue-500':'border-l-transparent'} hover:border-l-blue-400`,onClick:()=>handleNotificationClick(notification),title:`Click to view ${notification.type.toLowerCase().replace('_',' ')}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 mt-1\",children:getNotificationIcon(notification.type)}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 min-w-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-1\",children:[/*#__PURE__*/_jsx(\"p\",{className:`text-sm font-medium ${!notification.read?'text-gray-900':'text-gray-700'}`,children:notification.type.replace('_',' ')}),!notification.read&&/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-blue-500 rounded-full\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:notification.message}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 text-xs text-gray-400\",children:[/*#__PURE__*/_jsx(ClockIcon,{className:\"h-3 w-3\"}),formatTimeAgo(notification.createdAt),/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-500 font-medium\",children:\"Click to view \\u2192\"})]})]})]})},notification.id))})}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 border-t border-gray-200 bg-gray-50\",children:[notifications.length>0&&!isRateLimited&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setIsOpen(false);navigate('/sent-proposals');},className:\"w-full text-sm text-blue-600 hover:text-blue-700 font-medium mb-2\",children:\"View all proposals\"}),/*#__PURE__*/_jsx(\"button\",{onClick:testBrowserNotification,className:\"w-full text-sm text-green-600 hover:text-green-700 font-medium\",children:\"Test Browser Notification\"})]})]}),isOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 z-40\",onClick:()=>setIsOpen(false)})]});}","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useNavigate","BellIcon","ChatBubbleLeftIcon","EyeIcon","CheckCircleIcon","XCircleIcon","UserIcon","ClockIcon","notificationAPI","toast","useAuth","browserNotificationService","jsx","_jsx","jsxs","_jsxs","NotificationBell","user","navigate","notifications","setNotifications","unreadCount","setUnreadCount","isOpen","setIsOpen","loading","setLoading","error","setError","isRateLimited","setIsRateLimited","retryCount","setRetryCount","lastFetchTime","intervalRef","fetchNotifications","response","getAll","data","success","_error$response","_error$message","console","status","message","includes","backoffTime","Math","min","pow","setTimeout","prev","fetchUnreadCount","getUnreadCount","newUnreadCount","previousUnreadCount","canSendNotifications","newNotificationsCount","sendNotification","title","body","icon","tag","navigateTo","_error$response2","_error$message2","current","setInterval","now","Date","clearInterval","handleNotificationClick","notification","log","markAsRead","id","type","proposalId","testBrowserNotification","notificationId","map","notif","read","max","markAllAsRead","getNotificationIcon","className","formatTimeAgo","dateString","date","diffInMinutes","floor","getTime","children","onClick","newIsOpen","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","length","toLowerCase","replace","createdAt"],"sources":["/Users/davnishsingh/Documents/proposalai-main/proposalai/client/src/components/NotificationBell.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  BellIcon, \n  ChatBubbleLeftIcon, \n  EyeIcon, \n  CheckCircleIcon, \n  XCircleIcon,\n  UserIcon,\n  ClockIcon\n} from '@heroicons/react/24/outline';\nimport { notificationAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { useAuth } from '../hooks/useAuth';\nimport browserNotificationService from '../services/browserNotifications';\n\ninterface Notification {\n  id: string;\n  type: 'COMMENT' | 'PROPOSAL_OPENED' | 'PROPOSAL_APPROVED' | 'PROPOSAL_REJECTED' | 'CLIENT_REPLY' | 'ACCESS_REQUEST';\n  message: string;\n  read: boolean;\n  createdAt: string;\n  userId: string;\n  proposalId?: string;\n}\n\nexport default function NotificationBell() {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  \n  // Rate limiting and backoff state\n  const [isRateLimited, setIsRateLimited] = useState(false);\n  const [retryCount, setRetryCount] = useState(0);\n  const lastFetchTime = useRef<number>(0);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  const fetchNotifications = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(false);\n      setIsRateLimited(false);\n      setRetryCount(0);\n      \n      const response = await notificationAPI.getAll();\n      if (response.data.success) {\n        setNotifications(response.data.data);\n      }\n    } catch (error: any) {\n      console.error('Failed to fetch notifications:', error);\n      setError(true);\n      \n      // Handle rate limiting\n      if (error.response?.status === 429 || error.message?.includes('Too many requests')) {\n        setIsRateLimited(true);\n        // Exponential backoff: wait 2^retryCount minutes\n        const backoffTime = Math.min(Math.pow(2, retryCount) * 60000, 300000); // Max 5 minutes\n        setTimeout(() => {\n          setIsRateLimited(false);\n          setRetryCount(prev => prev + 1);\n        }, backoffTime);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [retryCount]);\n\n  const fetchUnreadCount = useCallback(async () => {\n    try {\n      // Skip if rate limited\n      if (isRateLimited) {\n        return;\n      }\n      \n      const response = await notificationAPI.getUnreadCount();\n      if (response.data.success) {\n        const newUnreadCount = response.data.data.unreadCount;\n        const previousUnreadCount = unreadCount;\n        \n        setUnreadCount(newUnreadCount);\n        setIsRateLimited(false);\n        setRetryCount(0);\n\n        // Send browser notification if we have new unread notifications\n        if (newUnreadCount > previousUnreadCount && browserNotificationService.canSendNotifications()) {\n          const newNotificationsCount = newUnreadCount - previousUnreadCount;\n          browserNotificationService.sendNotification({\n            title: 'New Notifications',\n            body: `You have ${newNotificationsCount} new notification${newNotificationsCount > 1 ? 's' : ''}`,\n            icon: '/favicon.ico',\n            tag: 'new-notifications',\n            data: {\n              navigateTo: '/dashboard'\n            }\n          });\n        }\n      }\n    } catch (error: any) {\n      console.error('Failed to fetch unread count:', error);\n      \n      // Handle rate limiting\n      if (error.response?.status === 429 || error.message?.includes('Too many requests')) {\n        setIsRateLimited(true);\n        // Exponential backoff: wait 2^retryCount minutes\n        const backoffTime = Math.min(Math.pow(2, retryCount) * 60000, 300000); // Max 5 minutes\n        setTimeout(() => {\n          setIsRateLimited(false);\n          setRetryCount(prev => prev + 1);\n        }, backoffTime);\n      }\n      // Don't set error here as we still want to show the bell\n    }\n  }, [isRateLimited, retryCount, unreadCount]);\n\n  useEffect(() => {\n    if (user) {\n      fetchNotifications();\n      fetchUnreadCount();\n      \n      // Poll for new notifications every 2 minutes (120 seconds) instead of 30 seconds\n      intervalRef.current = setInterval(() => {\n        // Only fetch if not rate limited and enough time has passed\n        const now = Date.now();\n        if (!isRateLimited && (now - lastFetchTime.current) > 60000) { // 1 minute minimum between calls\n          fetchUnreadCount();\n          fetchNotifications(); // Also fetch the full notification list\n          lastFetchTime.current = now;\n        }\n      }, 120000); // 2 minutes\n\n      return () => {\n        if (intervalRef.current) {\n          clearInterval(intervalRef.current);\n        }\n      };\n    }\n  }, [user, isRateLimited, fetchNotifications, fetchUnreadCount]);\n\n  const handleNotificationClick = async (notification: Notification) => {\n    try {\n      console.log('Notification clicked:', notification);\n      \n      // Mark as read first\n      await markAsRead(notification.id);\n      \n      // Close the dropdown\n      setIsOpen(false);\n      \n      // Navigate based on notification type\n      switch (notification.type) {\n        case 'COMMENT':\n        case 'CLIENT_REPLY':\n          if (notification.proposalId) {\n            console.log('Navigating to proposal comments:', notification.proposalId);\n            // Navigate to proposal with comments tab\n            navigate(`/proposals/${notification.proposalId}/view?tab=comments`);\n            toast.success('Navigating to comments...');\n          } else {\n            console.log('No proposalId found for comment notification');\n            navigate('/sent-proposals');\n            toast('Proposal not found, showing sent proposals');\n          }\n          break;\n          \n        case 'PROPOSAL_OPENED':\n        case 'PROPOSAL_APPROVED':\n        case 'PROPOSAL_REJECTED':\n          if (notification.proposalId) {\n            console.log('Navigating to proposal view:', notification.proposalId);\n            // Navigate to proposal view\n            navigate(`/proposals/${notification.proposalId}/view`);\n            toast.success('Navigating to proposal...');\n          } else {\n            console.log('No proposalId found for proposal notification');\n            navigate('/sent-proposals');\n            toast('Proposal not found, showing sent proposals');\n          }\n          break;\n          \n        case 'ACCESS_REQUEST':\n          if (notification.proposalId) {\n            console.log('Navigating to proposal activity:', notification.proposalId);\n            // Navigate to proposal with activity tab\n            navigate(`/proposals/${notification.proposalId}/view?tab=activity`);\n            toast.success('Navigating to proposal activity...');\n          } else {\n            console.log('No proposalId found for access request notification');\n            navigate('/sent-proposals');\n            toast('Proposal not found, showing sent proposals');\n          }\n          break;\n          \n        default:\n          console.log('Unknown notification type:', notification.type);\n          navigate('/dashboard');\n          toast('Navigating to dashboard...');\n      }\n    } catch (error) {\n      console.error('Error handling notification click:', error);\n      toast.error('Failed to process notification');\n    }\n  };\n\n  // Test browser notification function\n  const testBrowserNotification = () => {\n    if (browserNotificationService.canSendNotifications()) {\n      browserNotificationService.sendNotification({\n        title: 'Test Notification',\n        body: 'This is a test browser notification from ProposalAI!',\n        icon: '/favicon.ico',\n        tag: 'test-notification',\n        data: {\n          navigateTo: '/dashboard'\n        }\n      });\n      toast.success('Test notification sent!');\n    } else {\n      toast.error('Browser notifications not enabled');\n    }\n  };\n\n  const markAsRead = async (notificationId: string) => {\n    try {\n      await notificationAPI.markAsRead(notificationId);\n              setNotifications(prev => \n          prev.map(notif => \n            notif.id === notificationId ? { ...notif, read: true } : notif\n          )\n        );\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('Failed to mark notification as read:', error);\n    }\n  };\n\n  const markAllAsRead = async () => {\n    try {\n      await notificationAPI.markAllAsRead();\n              setNotifications(prev => prev.map(notif => ({ ...notif, read: true })));\n      setUnreadCount(0);\n      toast.success('All notifications marked as read');\n    } catch (error) {\n      console.error('Failed to mark all notifications as read:', error);\n      toast.error('Failed to mark notifications as read');\n    }\n  };\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'COMMENT':\n        return <ChatBubbleLeftIcon className=\"h-5 w-5 text-blue-500\" />;\n      case 'PROPOSAL_OPENED':\n        return <EyeIcon className=\"h-5 w-5 text-green-500\" />;\n      case 'PROPOSAL_APPROVED':\n        return <CheckCircleIcon className=\"h-5 w-5 text-green-600\" />;\n      case 'PROPOSAL_REJECTED':\n        return <XCircleIcon className=\"h-5 w-5 text-red-500\" />;\n      case 'CLIENT_REPLY':\n        return <UserIcon className=\"h-5 w-5 text-purple-500\" />;\n      case 'ACCESS_REQUEST':\n        return <UserIcon className=\"h-5 w-5 text-orange-500\" />;\n      default:\n        return <BellIcon className=\"h-5 w-5 text-gray-500\" />;\n    }\n  };\n\n  const formatTimeAgo = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return `${Math.floor(diffInMinutes / 1440)}d ago`;\n  };\n\n  return (\n    <div className=\"relative\">\n      {/* Notification Bell Button - Always show, even if API fails */}\n      <button\n        onClick={() => {\n          const newIsOpen = !isOpen;\n          setIsOpen(newIsOpen);\n          \n          // If opening the dropdown, refresh notifications immediately\n          if (newIsOpen && user && !isRateLimited) {\n            fetchNotifications();\n            fetchUnreadCount();\n          }\n        }}\n        className={`relative p-2 rounded-lg transition-colors ${\n          isRateLimited \n            ? 'text-yellow-600 hover:text-yellow-700 hover:bg-yellow-50' \n            : 'text-gray-600 hover:text-gray-700 hover:bg-gray-100'\n        }`}\n        title={\n          isRateLimited \n            ? \"Rate limited - notifications temporarily unavailable\" \n            : user \n              ? \"Notifications\" \n              : \"Login to see notifications\"\n        }\n      >\n        <BellIcon className=\"h-6 w-6\" />\n        {user && unreadCount > 0 && !isRateLimited && (\n          <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center font-medium\">\n            {unreadCount > 99 ? '99+' : unreadCount}\n          </span>\n        )}\n        {/* Show rate limiting indicator */}\n        {isRateLimited && (\n          <span className=\"absolute -bottom-1 -right-1 bg-yellow-500 text-white text-xs rounded-full h-3 w-3 flex items-center justify-center\">\n            ⏱\n          </span>\n        )}\n        {/* Show error indicator */}\n        {error && !isRateLimited && (\n          <span className=\"absolute -bottom-1 -right-1 bg-yellow-400 text-white text-xs rounded-full h-3 w-3 flex items-center justify-center\">\n            !\n          </span>\n        )}\n      </button>\n\n      {/* Notification Dropdown */}\n      {isOpen && (\n        <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50 max-h-96 overflow-hidden\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Notifications</h3>\n            <div className=\"flex items-center gap-2\">\n              {!isRateLimited && (\n                <button\n                  onClick={() => {\n                    fetchNotifications();\n                    fetchUnreadCount();\n                  }}\n                  disabled={loading}\n                  className={`p-1 transition-colors ${\n                    loading \n                      ? 'text-gray-300 cursor-not-allowed' \n                      : 'text-gray-400 hover:text-gray-600'\n                  }`}\n                  title=\"Refresh notifications\"\n                >\n                  <svg className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                  </svg>\n                </button>\n              )}\n              {unreadCount > 0 && !isRateLimited && (\n                <button\n                  onClick={markAllAsRead}\n                  className=\"text-sm text-blue-600 hover:text-blue-700 font-medium\"\n                >\n                  Mark all read\n                </button>\n              )}\n            </div>\n          </div>\n\n          {/* Rate Limiting Message */}\n          {isRateLimited && (\n            <div className=\"p-4 bg-yellow-50 border-b border-yellow-200\">\n              <div className=\"flex items-center gap-2 text-yellow-800\">\n                <ClockIcon className=\"h-4 w-4\" />\n                <p className=\"text-sm font-medium\">Rate limited</p>\n              </div>\n              <p className=\"text-xs text-yellow-600 mt-1\">\n                Too many requests. Notifications will resume automatically in a few minutes.\n              </p>\n            </div>\n          )}\n\n          {/* Notifications List */}\n          <div className=\"max-h-80 overflow-y-auto\">\n            {loading ? (\n              <div className=\"p-4 text-center text-gray-500\">\n                <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mx-auto\"></div>\n                <p className=\"mt-2\">Loading notifications...</p>\n              </div>\n            ) : notifications.length === 0 ? (\n              <div className=\"p-4 text-center text-gray-500\">\n                <BellIcon className=\"h-8 w-8 mx-auto mb-2 text-gray-300\" />\n                <p>\n                  {!user ? 'Please login to see notifications' : \n                   isRateLimited ? 'Notifications temporarily unavailable' :\n                   error ? 'Unable to load notifications' : 'No notifications yet'}\n                </p>\n                {error && !isRateLimited && (\n                  <p className=\"text-xs text-gray-400 mt-1\">Check console for details</p>\n                )}\n                {isRateLimited && (\n                  <p className=\"text-xs text-yellow-600 mt-1\">Please wait a few minutes</p>\n                )}\n              </div>\n            ) : (\n              <div className=\"divide-y divide-gray-100\">\n                {notifications.map((notification) => (\n                  <div\n                    key={notification.id}\n                    className={`p-4 hover:bg-blue-50 transition-colors cursor-pointer border-l-4 ${\n                      !notification.read ? 'bg-blue-50 border-l-blue-500' : 'border-l-transparent'\n                    } hover:border-l-blue-400`}\n                    onClick={() => handleNotificationClick(notification)}\n                    title={`Click to view ${notification.type.toLowerCase().replace('_', ' ')}`}\n                  >\n                    <div className=\"flex items-start gap-3\">\n                      <div className=\"flex-shrink-0 mt-1\">\n                        {getNotificationIcon(notification.type)}\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                          <p className={`text-sm font-medium ${\n                            !notification.read ? 'text-gray-900' : 'text-gray-700'\n                          }`}>\n                            {notification.type.replace('_', ' ')}\n                          </p>\n                          {!notification.read && (\n                            <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n                          )}\n                        </div>\n                        <p className=\"text-sm text-gray-600 mb-2\">\n                          {notification.message}\n                        </p>\n                        <div className=\"flex items-center gap-2 text-xs text-gray-400\">\n                          <ClockIcon className=\"h-3 w-3\" />\n                          {formatTimeAgo(notification.createdAt)}\n                          <span className=\"text-blue-500 font-medium\">Click to view →</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Footer */}\n          <div className=\"p-3 border-t border-gray-200 bg-gray-50\">\n            {notifications.length > 0 && !isRateLimited && (\n              <button\n                onClick={() => {\n                  setIsOpen(false);\n                  navigate('/sent-proposals');\n                }}\n                className=\"w-full text-sm text-blue-600 hover:text-blue-700 font-medium mb-2\"\n              >\n                View all proposals\n              </button>\n            )}\n            \n            {/* Test Browser Notification Button */}\n            <button\n              onClick={testBrowserNotification}\n              className=\"w-full text-sm text-green-600 hover:text-green-700 font-medium\"\n            >\n              Test Browser Notification\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Backdrop */}\n      {isOpen && (\n        <div\n          className=\"fixed inset-0 z-40\"\n          onClick={() => setIsOpen(false)}\n        />\n      )}\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}