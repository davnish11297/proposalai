{"ast":null,"code":"var _jsxFileName = \"/Users/davnishsingh/Documents/proposalai-main/proposalai/client/src/components/NotificationBell.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { BellIcon, ChatBubbleLeftIcon, EyeIcon, CheckCircleIcon, XCircleIcon, UserIcon, ClockIcon } from '@heroicons/react/24/outline';\nimport { notificationAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { useAuth } from '../hooks/useAuth';\nimport browserNotificationService from '../services/browserNotifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NotificationBell() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  // Rate limiting and backoff state\n  const [isRateLimited, setIsRateLimited] = useState(false);\n  const [retryCount, setRetryCount] = useState(0);\n  const lastFetchTime = useRef(0);\n  const intervalRef = useRef(null);\n  const fetchNotifications = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(false);\n      setIsRateLimited(false);\n      setRetryCount(0);\n      const response = await notificationAPI.getAll();\n      if (response.data.success) {\n        setNotifications(response.data.data);\n      }\n    } catch (error) {\n      var _error$response, _error$message;\n      console.error('Failed to fetch notifications:', error);\n      setError(true);\n\n      // Handle rate limiting\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 429 || (_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes('Too many requests')) {\n        setIsRateLimited(true);\n        // Exponential backoff: wait 2^retryCount minutes\n        const backoffTime = Math.min(Math.pow(2, retryCount) * 60000, 300000); // Max 5 minutes\n        setTimeout(() => {\n          setIsRateLimited(false);\n          setRetryCount(prev => prev + 1);\n        }, backoffTime);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [retryCount]);\n  const fetchUnreadCount = useCallback(async () => {\n    try {\n      // Skip if rate limited\n      if (isRateLimited) {\n        return;\n      }\n      const response = await notificationAPI.getUnreadCount();\n      if (response.data.success) {\n        const newUnreadCount = response.data.data.unreadCount;\n        const previousUnreadCount = unreadCount;\n        setUnreadCount(newUnreadCount);\n        setIsRateLimited(false);\n        setRetryCount(0);\n\n        // Send browser notification if we have new unread notifications\n        if (newUnreadCount > previousUnreadCount && browserNotificationService.canSendNotifications()) {\n          const newNotificationsCount = newUnreadCount - previousUnreadCount;\n          browserNotificationService.sendNotification({\n            title: 'New Notifications',\n            body: `You have ${newNotificationsCount} new notification${newNotificationsCount > 1 ? 's' : ''}`,\n            icon: '/favicon.ico',\n            tag: 'new-notifications',\n            data: {\n              navigateTo: '/dashboard'\n            }\n          });\n        }\n      }\n    } catch (error) {\n      var _error$response2, _error$message2;\n      console.error('Failed to fetch unread count:', error);\n\n      // Handle rate limiting\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 429 || (_error$message2 = error.message) !== null && _error$message2 !== void 0 && _error$message2.includes('Too many requests')) {\n        setIsRateLimited(true);\n        // Exponential backoff: wait 2^retryCount minutes\n        const backoffTime = Math.min(Math.pow(2, retryCount) * 60000, 300000); // Max 5 minutes\n        setTimeout(() => {\n          setIsRateLimited(false);\n          setRetryCount(prev => prev + 1);\n        }, backoffTime);\n      }\n      // Don't set error here as we still want to show the bell\n    }\n  }, [isRateLimited, retryCount, unreadCount]);\n  useEffect(() => {\n    if (user) {\n      fetchNotifications();\n      fetchUnreadCount();\n\n      // Poll for new notifications every 2 minutes (120 seconds) instead of 30 seconds\n      intervalRef.current = setInterval(() => {\n        // Only fetch if not rate limited and enough time has passed\n        const now = Date.now();\n        if (!isRateLimited && now - lastFetchTime.current > 60000) {\n          // 1 minute minimum between calls\n          fetchUnreadCount();\n          fetchNotifications(); // Also fetch the full notification list\n          lastFetchTime.current = now;\n        }\n      }, 120000); // 2 minutes\n\n      return () => {\n        if (intervalRef.current) {\n          clearInterval(intervalRef.current);\n        }\n      };\n    }\n  }, [user, isRateLimited, fetchNotifications, fetchUnreadCount]);\n  const handleNotificationClick = async notification => {\n    try {\n      // Mark as read first\n      await markAsRead(notification.id);\n\n      // Close the dropdown\n      setIsOpen(false);\n\n      // Navigate based on notification type\n      switch (notification.type) {\n        case 'COMMENT':\n        case 'CLIENT_REPLY':\n          if (notification.proposalId) {\n            // Navigate to proposal with comments tab\n            navigate(`/proposals/${notification.proposalId}/view?tab=comments`);\n            toast.success('Navigating to comments...');\n          } else {\n            navigate('/sent-proposals');\n            toast('Proposal not found, showing sent proposals');\n          }\n          break;\n        case 'PROPOSAL_OPENED':\n        case 'PROPOSAL_APPROVED':\n        case 'PROPOSAL_REJECTED':\n          if (notification.proposalId) {\n            // Navigate to proposal view\n            navigate(`/proposals/${notification.proposalId}/view`);\n            toast.success('Navigating to proposal...');\n          } else {\n            navigate('/sent-proposals');\n            toast('Proposal not found, showing sent proposals');\n          }\n          break;\n        case 'ACCESS_REQUEST':\n          if (notification.proposalId) {\n            // Navigate to proposal with activity tab\n            navigate(`/proposals/${notification.proposalId}/view?tab=activity`);\n            toast.success('Navigating to proposal activity...');\n          } else {\n            navigate('/sent-proposals');\n            toast('Proposal not found, showing sent proposals');\n          }\n          break;\n        default:\n          navigate('/dashboard');\n          toast('Navigating to dashboard...');\n      }\n    } catch (error) {\n      console.error('Error handling notification click:', error);\n      toast.error('Failed to process notification');\n    }\n  };\n\n  // Test browser notification function\n  const testBrowserNotification = () => {\n    if (browserNotificationService.canSendNotifications()) {\n      browserNotificationService.sendNotification({\n        title: 'Test Notification',\n        body: 'This is a test browser notification from ProposalAI!',\n        icon: '/favicon.ico',\n        tag: 'test-notification',\n        data: {\n          navigateTo: '/dashboard'\n        }\n      });\n      toast.success('Test notification sent!');\n    } else {\n      toast.error('Browser notifications not enabled');\n    }\n  };\n  const markAsRead = async notificationId => {\n    try {\n      await notificationAPI.markAsRead(notificationId);\n      setNotifications(prev => prev.map(notif => notif.id === notificationId ? {\n        ...notif,\n        isRead: true\n      } : notif));\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('Failed to mark notification as read:', error);\n    }\n  };\n  const markAllAsRead = async () => {\n    try {\n      await notificationAPI.markAllAsRead();\n      setNotifications(prev => prev.map(notif => ({\n        ...notif,\n        isRead: true\n      })));\n      setUnreadCount(0);\n      toast.success('All notifications marked as read');\n    } catch (error) {\n      console.error('Failed to mark all notifications as read:', error);\n      toast.error('Failed to mark notifications as read');\n    }\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'COMMENT':\n        return /*#__PURE__*/_jsxDEV(ChatBubbleLeftIcon, {\n          className: \"h-5 w-5 text-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 16\n        }, this);\n      case 'PROPOSAL_OPENED':\n        return /*#__PURE__*/_jsxDEV(EyeIcon, {\n          className: \"h-5 w-5 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 16\n        }, this);\n      case 'PROPOSAL_APPROVED':\n        return /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          className: \"h-5 w-5 text-green-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 16\n        }, this);\n      case 'PROPOSAL_REJECTED':\n        return /*#__PURE__*/_jsxDEV(XCircleIcon, {\n          className: \"h-5 w-5 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 16\n        }, this);\n      case 'CLIENT_REPLY':\n        return /*#__PURE__*/_jsxDEV(UserIcon, {\n          className: \"h-5 w-5 text-purple-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 16\n        }, this);\n      case 'ACCESS_REQUEST':\n        return /*#__PURE__*/_jsxDEV(UserIcon, {\n          className: \"h-5 w-5 text-orange-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(BellIcon, {\n          className: \"h-5 w-5 text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const formatTimeAgo = dateString => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return `${Math.floor(diffInMinutes / 1440)}d ago`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const newIsOpen = !isOpen;\n        setIsOpen(newIsOpen);\n\n        // If opening the dropdown, refresh notifications immediately\n        if (newIsOpen && user && !isRateLimited) {\n          fetchNotifications();\n          fetchUnreadCount();\n        }\n      },\n      className: `relative p-2 rounded-lg transition-colors ${isRateLimited ? 'text-yellow-300 hover:text-yellow-200 hover:bg-yellow-900/20' : 'text-white/80 hover:text-white hover:bg-white/10'}`,\n      title: isRateLimited ? \"Rate limited - notifications temporarily unavailable\" : user ? \"Notifications\" : \"Login to see notifications\",\n      children: [/*#__PURE__*/_jsxDEV(BellIcon, {\n        className: \"h-6 w-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), user && unreadCount > 0 && !isRateLimited && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center font-medium\",\n        children: unreadCount > 99 ? '99+' : unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), isRateLimited && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"absolute -bottom-1 -right-1 bg-yellow-500 text-white text-xs rounded-full h-3 w-3 flex items-center justify-center\",\n        children: \"\\u23F1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), error && !isRateLimited && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"absolute -bottom-1 -right-1 bg-yellow-400 text-white text-xs rounded-full h-3 w-3 flex items-center justify-center\",\n        children: \"!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50 max-h-96 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-4 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-gray-900\",\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [!isRateLimited && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              fetchNotifications();\n              fetchUnreadCount();\n            },\n            disabled: loading,\n            className: `p-1 transition-colors ${loading ? 'text-gray-300 cursor-not-allowed' : 'text-gray-400 hover:text-gray-600'}`,\n            title: \"Refresh notifications\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: `h-4 w-4 ${loading ? 'animate-spin' : ''}`,\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this), unreadCount > 0 && !isRateLimited && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: markAllAsRead,\n            className: \"text-sm text-blue-600 hover:text-blue-700 font-medium\",\n            children: \"Mark all read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), isRateLimited && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-yellow-50 border-b border-yellow-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 text-yellow-800\",\n          children: [/*#__PURE__*/_jsxDEV(ClockIcon, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm font-medium\",\n            children: \"Rate limited\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-yellow-600 mt-1\",\n          children: \"Too many requests. Notifications will resume automatically in a few minutes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-h-80 overflow-y-auto\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 text-center text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mx-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2\",\n            children: \"Loading notifications...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 15\n        }, this) : notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 text-center text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(BellIcon, {\n            className: \"h-8 w-8 mx-auto mb-2 text-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: !user ? 'Please login to see notifications' : isRateLimited ? 'Notifications temporarily unavailable' : error ? 'Unable to load notifications' : 'No notifications yet'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this), error && !isRateLimited && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-400 mt-1\",\n            children: \"Check console for details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 19\n          }, this), isRateLimited && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-yellow-600 mt-1\",\n            children: \"Please wait a few minutes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divide-y divide-gray-100\",\n          children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-4 hover:bg-blue-50 transition-colors cursor-pointer border-l-4 ${!notification.isRead ? 'bg-blue-50 border-l-blue-500' : 'border-l-transparent'} hover:border-l-blue-400`,\n            onClick: () => handleNotificationClick(notification),\n            title: `Click to view ${notification.type.toLowerCase().replace('_', ' ')}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-shrink-0 mt-1\",\n                children: getNotificationIcon(notification.type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 min-w-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2 mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: `text-sm font-medium ${!notification.isRead ? 'text-gray-900' : 'text-gray-700'}`,\n                    children: notification.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 27\n                  }, this), !notification.isRead && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-2 h-2 bg-blue-500 rounded-full\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600 mb-2\",\n                  children: notification.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2 text-xs text-gray-400\",\n                  children: [/*#__PURE__*/_jsxDEV(ClockIcon, {\n                    className: \"h-3 w-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 27\n                  }, this), formatTimeAgo(notification.createdAt), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-blue-500 font-medium\",\n                    children: \"Click to view \\u2192\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 21\n            }, this)\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), notifications.length > 0 && !isRateLimited && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 border-t border-gray-200 bg-gray-50\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setIsOpen(false);\n            navigate('/sent-proposals');\n          },\n          className: \"w-full text-sm text-blue-600 hover:text-blue-700 font-medium\",\n          children: \"View all proposals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-40\",\n      onClick: () => setIsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationBell, \"BSS42JjroyUAIy6MpwWVpYRVZVM=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = NotificationBell;\nvar _c;\n$RefreshReg$(_c, \"NotificationBell\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useNavigate","BellIcon","ChatBubbleLeftIcon","EyeIcon","CheckCircleIcon","XCircleIcon","UserIcon","ClockIcon","notificationAPI","toast","useAuth","browserNotificationService","jsxDEV","_jsxDEV","NotificationBell","_s","user","navigate","notifications","setNotifications","unreadCount","setUnreadCount","isOpen","setIsOpen","loading","setLoading","error","setError","isRateLimited","setIsRateLimited","retryCount","setRetryCount","lastFetchTime","intervalRef","fetchNotifications","response","getAll","data","success","_error$response","_error$message","console","status","message","includes","backoffTime","Math","min","pow","setTimeout","prev","fetchUnreadCount","getUnreadCount","newUnreadCount","previousUnreadCount","canSendNotifications","newNotificationsCount","sendNotification","title","body","icon","tag","navigateTo","_error$response2","_error$message2","current","setInterval","now","Date","clearInterval","handleNotificationClick","notification","markAsRead","id","type","proposalId","testBrowserNotification","notificationId","map","notif","isRead","max","markAllAsRead","getNotificationIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","formatTimeAgo","dateString","date","diffInMinutes","floor","getTime","children","onClick","newIsOpen","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","length","toLowerCase","replace","createdAt","_c","$RefreshReg$"],"sources":["/Users/davnishsingh/Documents/proposalai-main/proposalai/client/src/components/NotificationBell.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  BellIcon, \n  ChatBubbleLeftIcon, \n  EyeIcon, \n  CheckCircleIcon, \n  XCircleIcon,\n  UserIcon,\n  ClockIcon\n} from '@heroicons/react/24/outline';\nimport { notificationAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { useAuth } from '../hooks/useAuth';\nimport browserNotificationService from '../services/browserNotifications';\n\ninterface Notification {\n  id: string;\n  type: 'COMMENT' | 'PROPOSAL_OPENED' | 'PROPOSAL_APPROVED' | 'PROPOSAL_REJECTED' | 'CLIENT_REPLY' | 'ACCESS_REQUEST';\n  title: string;\n  message: string;\n  isRead: boolean;\n  createdAt: string;\n  proposalId?: string;\n  proposalTitle?: string;\n  clientName?: string;\n}\n\nexport default function NotificationBell() {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  \n  // Rate limiting and backoff state\n  const [isRateLimited, setIsRateLimited] = useState(false);\n  const [retryCount, setRetryCount] = useState(0);\n  const lastFetchTime = useRef<number>(0);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  const fetchNotifications = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(false);\n      setIsRateLimited(false);\n      setRetryCount(0);\n      \n      const response = await notificationAPI.getAll();\n      if (response.data.success) {\n        setNotifications(response.data.data);\n      }\n    } catch (error: any) {\n      console.error('Failed to fetch notifications:', error);\n      setError(true);\n      \n      // Handle rate limiting\n      if (error.response?.status === 429 || error.message?.includes('Too many requests')) {\n        setIsRateLimited(true);\n        // Exponential backoff: wait 2^retryCount minutes\n        const backoffTime = Math.min(Math.pow(2, retryCount) * 60000, 300000); // Max 5 minutes\n        setTimeout(() => {\n          setIsRateLimited(false);\n          setRetryCount(prev => prev + 1);\n        }, backoffTime);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [retryCount]);\n\n  const fetchUnreadCount = useCallback(async () => {\n    try {\n      // Skip if rate limited\n      if (isRateLimited) {\n        return;\n      }\n      \n      const response = await notificationAPI.getUnreadCount();\n      if (response.data.success) {\n        const newUnreadCount = response.data.data.unreadCount;\n        const previousUnreadCount = unreadCount;\n        \n        setUnreadCount(newUnreadCount);\n        setIsRateLimited(false);\n        setRetryCount(0);\n\n        // Send browser notification if we have new unread notifications\n        if (newUnreadCount > previousUnreadCount && browserNotificationService.canSendNotifications()) {\n          const newNotificationsCount = newUnreadCount - previousUnreadCount;\n          browserNotificationService.sendNotification({\n            title: 'New Notifications',\n            body: `You have ${newNotificationsCount} new notification${newNotificationsCount > 1 ? 's' : ''}`,\n            icon: '/favicon.ico',\n            tag: 'new-notifications',\n            data: {\n              navigateTo: '/dashboard'\n            }\n          });\n        }\n      }\n    } catch (error: any) {\n      console.error('Failed to fetch unread count:', error);\n      \n      // Handle rate limiting\n      if (error.response?.status === 429 || error.message?.includes('Too many requests')) {\n        setIsRateLimited(true);\n        // Exponential backoff: wait 2^retryCount minutes\n        const backoffTime = Math.min(Math.pow(2, retryCount) * 60000, 300000); // Max 5 minutes\n        setTimeout(() => {\n          setIsRateLimited(false);\n          setRetryCount(prev => prev + 1);\n        }, backoffTime);\n      }\n      // Don't set error here as we still want to show the bell\n    }\n  }, [isRateLimited, retryCount, unreadCount]);\n\n  useEffect(() => {\n    if (user) {\n      fetchNotifications();\n      fetchUnreadCount();\n      \n      // Poll for new notifications every 2 minutes (120 seconds) instead of 30 seconds\n      intervalRef.current = setInterval(() => {\n        // Only fetch if not rate limited and enough time has passed\n        const now = Date.now();\n        if (!isRateLimited && (now - lastFetchTime.current) > 60000) { // 1 minute minimum between calls\n          fetchUnreadCount();\n          fetchNotifications(); // Also fetch the full notification list\n          lastFetchTime.current = now;\n        }\n      }, 120000); // 2 minutes\n\n      return () => {\n        if (intervalRef.current) {\n          clearInterval(intervalRef.current);\n        }\n      };\n    }\n  }, [user, isRateLimited, fetchNotifications, fetchUnreadCount]);\n\n  const handleNotificationClick = async (notification: Notification) => {\n    try {\n      // Mark as read first\n      await markAsRead(notification.id);\n      \n      // Close the dropdown\n      setIsOpen(false);\n      \n      // Navigate based on notification type\n      switch (notification.type) {\n        case 'COMMENT':\n        case 'CLIENT_REPLY':\n          if (notification.proposalId) {\n            // Navigate to proposal with comments tab\n            navigate(`/proposals/${notification.proposalId}/view?tab=comments`);\n            toast.success('Navigating to comments...');\n          } else {\n            navigate('/sent-proposals');\n            toast('Proposal not found, showing sent proposals');\n          }\n          break;\n          \n        case 'PROPOSAL_OPENED':\n        case 'PROPOSAL_APPROVED':\n        case 'PROPOSAL_REJECTED':\n          if (notification.proposalId) {\n            // Navigate to proposal view\n            navigate(`/proposals/${notification.proposalId}/view`);\n            toast.success('Navigating to proposal...');\n          } else {\n            navigate('/sent-proposals');\n            toast('Proposal not found, showing sent proposals');\n          }\n          break;\n          \n        case 'ACCESS_REQUEST':\n          if (notification.proposalId) {\n            // Navigate to proposal with activity tab\n            navigate(`/proposals/${notification.proposalId}/view?tab=activity`);\n            toast.success('Navigating to proposal activity...');\n          } else {\n            navigate('/sent-proposals');\n            toast('Proposal not found, showing sent proposals');\n          }\n          break;\n          \n        default:\n          navigate('/dashboard');\n          toast('Navigating to dashboard...');\n      }\n    } catch (error) {\n      console.error('Error handling notification click:', error);\n      toast.error('Failed to process notification');\n    }\n  };\n\n  // Test browser notification function\n  const testBrowserNotification = () => {\n    if (browserNotificationService.canSendNotifications()) {\n      browserNotificationService.sendNotification({\n        title: 'Test Notification',\n        body: 'This is a test browser notification from ProposalAI!',\n        icon: '/favicon.ico',\n        tag: 'test-notification',\n        data: {\n          navigateTo: '/dashboard'\n        }\n      });\n      toast.success('Test notification sent!');\n    } else {\n      toast.error('Browser notifications not enabled');\n    }\n  };\n\n  const markAsRead = async (notificationId: string) => {\n    try {\n      await notificationAPI.markAsRead(notificationId);\n      setNotifications(prev => \n        prev.map(notif => \n          notif.id === notificationId ? { ...notif, isRead: true } : notif\n        )\n      );\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('Failed to mark notification as read:', error);\n    }\n  };\n\n  const markAllAsRead = async () => {\n    try {\n      await notificationAPI.markAllAsRead();\n      setNotifications(prev => prev.map(notif => ({ ...notif, isRead: true })));\n      setUnreadCount(0);\n      toast.success('All notifications marked as read');\n    } catch (error) {\n      console.error('Failed to mark all notifications as read:', error);\n      toast.error('Failed to mark notifications as read');\n    }\n  };\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'COMMENT':\n        return <ChatBubbleLeftIcon className=\"h-5 w-5 text-blue-500\" />;\n      case 'PROPOSAL_OPENED':\n        return <EyeIcon className=\"h-5 w-5 text-green-500\" />;\n      case 'PROPOSAL_APPROVED':\n        return <CheckCircleIcon className=\"h-5 w-5 text-green-600\" />;\n      case 'PROPOSAL_REJECTED':\n        return <XCircleIcon className=\"h-5 w-5 text-red-500\" />;\n      case 'CLIENT_REPLY':\n        return <UserIcon className=\"h-5 w-5 text-purple-500\" />;\n      case 'ACCESS_REQUEST':\n        return <UserIcon className=\"h-5 w-5 text-orange-500\" />;\n      default:\n        return <BellIcon className=\"h-5 w-5 text-gray-500\" />;\n    }\n  };\n\n  const formatTimeAgo = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return `${Math.floor(diffInMinutes / 1440)}d ago`;\n  };\n\n  return (\n    <div className=\"relative\">\n      {/* Notification Bell Button - Always show, even if API fails */}\n      <button\n        onClick={() => {\n          const newIsOpen = !isOpen;\n          setIsOpen(newIsOpen);\n          \n          // If opening the dropdown, refresh notifications immediately\n          if (newIsOpen && user && !isRateLimited) {\n            fetchNotifications();\n            fetchUnreadCount();\n          }\n        }}\n        className={`relative p-2 rounded-lg transition-colors ${\n          isRateLimited \n            ? 'text-yellow-300 hover:text-yellow-200 hover:bg-yellow-900/20' \n            : 'text-white/80 hover:text-white hover:bg-white/10'\n        }`}\n        title={\n          isRateLimited \n            ? \"Rate limited - notifications temporarily unavailable\" \n            : user \n              ? \"Notifications\" \n              : \"Login to see notifications\"\n        }\n      >\n        <BellIcon className=\"h-6 w-6\" />\n        {user && unreadCount > 0 && !isRateLimited && (\n          <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center font-medium\">\n            {unreadCount > 99 ? '99+' : unreadCount}\n          </span>\n        )}\n        {/* Show rate limiting indicator */}\n        {isRateLimited && (\n          <span className=\"absolute -bottom-1 -right-1 bg-yellow-500 text-white text-xs rounded-full h-3 w-3 flex items-center justify-center\">\n            ⏱\n          </span>\n        )}\n        {/* Show error indicator */}\n        {error && !isRateLimited && (\n          <span className=\"absolute -bottom-1 -right-1 bg-yellow-400 text-white text-xs rounded-full h-3 w-3 flex items-center justify-center\">\n            !\n          </span>\n        )}\n      </button>\n\n      {/* Notification Dropdown */}\n      {isOpen && (\n        <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50 max-h-96 overflow-hidden\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Notifications</h3>\n            <div className=\"flex items-center gap-2\">\n              {!isRateLimited && (\n                <button\n                  onClick={() => {\n                    fetchNotifications();\n                    fetchUnreadCount();\n                  }}\n                  disabled={loading}\n                  className={`p-1 transition-colors ${\n                    loading \n                      ? 'text-gray-300 cursor-not-allowed' \n                      : 'text-gray-400 hover:text-gray-600'\n                  }`}\n                  title=\"Refresh notifications\"\n                >\n                  <svg className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                  </svg>\n                </button>\n              )}\n              {unreadCount > 0 && !isRateLimited && (\n                <button\n                  onClick={markAllAsRead}\n                  className=\"text-sm text-blue-600 hover:text-blue-700 font-medium\"\n                >\n                  Mark all read\n                </button>\n              )}\n            </div>\n          </div>\n\n          {/* Rate Limiting Message */}\n          {isRateLimited && (\n            <div className=\"p-4 bg-yellow-50 border-b border-yellow-200\">\n              <div className=\"flex items-center gap-2 text-yellow-800\">\n                <ClockIcon className=\"h-4 w-4\" />\n                <p className=\"text-sm font-medium\">Rate limited</p>\n              </div>\n              <p className=\"text-xs text-yellow-600 mt-1\">\n                Too many requests. Notifications will resume automatically in a few minutes.\n              </p>\n            </div>\n          )}\n\n          {/* Notifications List */}\n          <div className=\"max-h-80 overflow-y-auto\">\n            {loading ? (\n              <div className=\"p-4 text-center text-gray-500\">\n                <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mx-auto\"></div>\n                <p className=\"mt-2\">Loading notifications...</p>\n              </div>\n            ) : notifications.length === 0 ? (\n              <div className=\"p-4 text-center text-gray-500\">\n                <BellIcon className=\"h-8 w-8 mx-auto mb-2 text-gray-300\" />\n                <p>\n                  {!user ? 'Please login to see notifications' : \n                   isRateLimited ? 'Notifications temporarily unavailable' :\n                   error ? 'Unable to load notifications' : 'No notifications yet'}\n                </p>\n                {error && !isRateLimited && (\n                  <p className=\"text-xs text-gray-400 mt-1\">Check console for details</p>\n                )}\n                {isRateLimited && (\n                  <p className=\"text-xs text-yellow-600 mt-1\">Please wait a few minutes</p>\n                )}\n              </div>\n            ) : (\n              <div className=\"divide-y divide-gray-100\">\n                {notifications.map((notification) => (\n                  <div\n                    key={notification.id}\n                    className={`p-4 hover:bg-blue-50 transition-colors cursor-pointer border-l-4 ${\n                      !notification.isRead ? 'bg-blue-50 border-l-blue-500' : 'border-l-transparent'\n                    } hover:border-l-blue-400`}\n                    onClick={() => handleNotificationClick(notification)}\n                    title={`Click to view ${notification.type.toLowerCase().replace('_', ' ')}`}\n                  >\n                    <div className=\"flex items-start gap-3\">\n                      <div className=\"flex-shrink-0 mt-1\">\n                        {getNotificationIcon(notification.type)}\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                          <p className={`text-sm font-medium ${\n                            !notification.isRead ? 'text-gray-900' : 'text-gray-700'\n                          }`}>\n                            {notification.title}\n                          </p>\n                          {!notification.isRead && (\n                            <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n                          )}\n                        </div>\n                        <p className=\"text-sm text-gray-600 mb-2\">\n                          {notification.message}\n                        </p>\n                        <div className=\"flex items-center gap-2 text-xs text-gray-400\">\n                          <ClockIcon className=\"h-3 w-3\" />\n                          {formatTimeAgo(notification.createdAt)}\n                          <span className=\"text-blue-500 font-medium\">Click to view →</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Footer */}\n          {notifications.length > 0 && !isRateLimited && (\n            <div className=\"p-3 border-t border-gray-200 bg-gray-50\">\n              <button\n                onClick={() => {\n                  setIsOpen(false);\n                  navigate('/sent-proposals');\n                }}\n                className=\"w-full text-sm text-blue-600 hover:text-blue-700 font-medium\"\n              >\n                View all proposals\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Backdrop */}\n      {isOpen && (\n        <div\n          className=\"fixed inset-0 z-40\"\n          onClick={() => setIsOpen(false)}\n        />\n      )}\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}