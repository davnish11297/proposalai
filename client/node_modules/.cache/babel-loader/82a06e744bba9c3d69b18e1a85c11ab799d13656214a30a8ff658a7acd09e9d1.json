{"ast":null,"code":"import axios from 'axios';\n\n// In development, use relative URLs to work with the proxy\n// In production, use the full URL\nconst API_BASE_URL = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_API_URL || 'http://localhost:3000/api' : 'http://localhost:3001/api';\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // Enable credentials for CORS\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const authAPI = {\n  login: data => api.post('/auth/login', data),\n  register: data => api.post('/auth/register', data),\n  logout: () => api.post('/auth/logout'),\n  me: () => api.get('/auth/me')\n};\nexport const proposalsAPI = {\n  getAll: params => api.get('/proposals', {\n    params\n  }),\n  getById: id => api.get(`/proposals/${id}`),\n  create: data => api.post('/proposals', data),\n  update: (id, data) => api.put(`/proposals/${id}`, data),\n  delete: id => api.delete(`/proposals/${id}`),\n  generate: data => api.post('/proposals/generate', data),\n  publish: id => api.post(`/proposals/${id}/publish`),\n  duplicate: id => api.post(`/proposals/${id}/duplicate`),\n  sendEmail: (id, data) => api.post(`/proposals/${id}/send-email`, data),\n  sendProposal: (id, data) => api.post(`/proposals/${id}/send-email`, data),\n  downloadPDF: id => api.get(`/proposals/${id}/download-pdf`, {\n    responseType: 'blob'\n  }),\n  getByClient: clientName => api.get('/proposals', {\n    params: {\n      clientName\n    }\n  }),\n  getEmailTrackingStats: id => api.get(`/email-tracking/stats/${id}`),\n  getAccessRequests: id => api.get(`/proposals/${id}/access-requests`),\n  grantAccessRequest: (id, requestId) => api.post(`/proposals/${id}/access-requests/${requestId}/grant`)\n};\nexport const templatesAPI = {\n  getAll: params => api.get('/templates', {\n    params\n  }),\n  getById: id => api.get(`/templates/${id}`),\n  create: data => api.post('/templates', data),\n  update: (id, data) => api.put(`/templates/${id}`, data),\n  delete: id => api.delete(`/templates/${id}`)\n};\nexport const snippetsAPI = {\n  getAll: params => api.get('/snippets', {\n    params\n  }),\n  getById: id => api.get(`/snippets/${id}`),\n  create: data => api.post('/snippets', data),\n  update: (id, data) => api.put(`/snippets/${id}`, data),\n  delete: id => api.delete(`/snippets/${id}`),\n  incrementUsage: id => api.post(`/snippets/${id}/increment-usage`)\n};\nexport const caseStudiesAPI = {\n  getAll: params => api.get('/case-studies', {\n    params\n  }),\n  getById: id => api.get(`/case-studies/${id}`),\n  create: data => api.post('/case-studies', data),\n  update: (id, data) => api.put(`/case-studies/${id}`, data),\n  delete: id => api.delete(`/case-studies/${id}`)\n};\nexport const pricingAPI = {\n  getAll: params => api.get('/pricing', {\n    params\n  }),\n  getById: id => api.get(`/pricing/${id}`),\n  create: data => api.post('/pricing', data),\n  update: (id, data) => api.put(`/pricing/${id}`, data),\n  delete: id => api.delete(`/pricing/${id}`)\n};\nexport const analyticsAPI = {\n  getDashboard: () => api.get('/analytics'),\n  getProposals: params => api.get('/analytics', {\n    params\n  })\n};\nexport const organizationsAPI = {\n  getCurrent: () => api.get('/organizations/current'),\n  update: data => api.put('/organizations/current', data),\n  getBrandSettings: () => api.get('/organizations/brand-settings'),\n  updateBrandSettings: data => api.put('/organizations/brand-settings', data)\n};\nexport const usersAPI = {\n  getProfile: () => api.get('/users/profile'),\n  updateProfile: data => api.put('/users/profile', data),\n  changePassword: data => api.put('/users/password', data)\n};\nexport const publicAPI = {\n  getProposal: (id, accessCode) => api.get(`/public/proposals/${id}${accessCode ? `?accessCode=${accessCode}` : ''}`),\n  submitFeedback: (id, data) => api.post(`/public/proposals/${id}/feedback`, data),\n  requestAccess: (id, data) => api.post(`/public/proposals/${id}/request-access`, data)\n};\nexport const clientsAPI = {\n  getAll: params => api.get('/clients', {\n    params\n  }),\n  getById: id => api.get(`/clients/${id}`),\n  create: data => api.post('/clients', data),\n  update: (id, data) => api.put(`/clients/${id}`, data),\n  delete: id => api.delete(`/clients/${id}`)\n};\nexport const commentsAPI = {\n  getByProposal: (proposalId, params) => api.get(`/comments/proposal/${proposalId}`, {\n    params\n  }),\n  getUnreadCount: proposalId => api.get(`/comments/proposal/${proposalId}/unread`),\n  create: (proposalId, data) => api.post(`/comments/proposal/${proposalId}`, data),\n  update: (id, data) => api.put(`/comments/${id}`, data),\n  delete: id => api.delete(`/comments/${id}`)\n};\nexport const teamsAPI = {\n  getAll: params => api.get('/teams', {\n    params\n  }),\n  getById: id => api.get(`/teams/${id}`),\n  create: data => api.post('/teams', data),\n  update: (id, data) => api.put(`/teams/${id}`, data),\n  delete: id => api.delete(`/teams/${id}`),\n  addMember: (teamId, data) => api.post(`/teams/${teamId}/members`, data),\n  updateMember: (teamId, memberId, data) => api.put(`/teams/${teamId}/members/${memberId}`, data),\n  removeMember: (teamId, memberId) => api.delete(`/teams/${teamId}/members/${memberId}`),\n  getProposals: (teamId, params) => api.get(`/teams/${teamId}/proposals`, {\n    params\n  })\n};\n\n// Notification API\nexport const notificationAPI = {\n  // Get all notifications for the current user\n  getAll: () => api.get('/notifications'),\n  // Get unread notification count\n  getUnreadCount: () => api.get('/notifications/unread-count'),\n  // Mark notification as read\n  markAsRead: notificationId => api.put(`/notifications/${notificationId}/read`),\n  // Mark all notifications as read\n  markAllAsRead: () => api.put('/notifications/mark-all-read'),\n  // Get proposal-specific notifications\n  getByProposal: proposalId => api.get(`/notifications/proposal/${proposalId}`)\n};\n\n/**\n * Call OpenRouter's DeepSeek model (or any OpenRouter model) using OpenAI-compatible API.\n * Usage:\n *   const result = await getOpenRouterChatCompletion([\n *     { role: 'user', content: 'Hello, who are you?' }\n *   ]);\n */\nexport async function getOpenRouterChatCompletion(messages, model = \"deepseek/deepseek-chat\") {\n  var _messages$, _messages$$content;\n  const API_BASE_URL = \"https://openrouter.ai/api/v1\";\n  // It's best to store your API key in an environment variable for security\n  const API_KEY = process.env.REACT_APP_OPENROUTER_API_KEY || \"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\";\n  const requestBody = {\n    model,\n    messages,\n    max_tokens: 400,\n    // Reduced from 800 to work within current credit limits (475 available)\n    temperature: 0.7\n  };\n  console.log('üîç Sending request to OpenRouter:', {\n    model,\n    messageCount: messages.length,\n    firstMessage: ((_messages$ = messages[0]) === null || _messages$ === void 0 ? void 0 : (_messages$$content = _messages$.content) === null || _messages$$content === void 0 ? void 0 : _messages$$content.substring(0, 50)) + '...',\n    maxTokens: requestBody.max_tokens\n  });\n  const response = await fetch(`${API_BASE_URL}/chat/completions`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${API_KEY}`,\n      \"HTTP-Referer\": \"http://localhost:3000\",\n      // Required by OpenRouter\n      \"X-Title\": \"ProposalAI\" // Optional but recommended\n    },\n    body: JSON.stringify(requestBody)\n  });\n  if (!response.ok) {\n    const errorText = await response.text();\n    console.error('üö® OpenRouter API Error Details:', {\n      status: response.status,\n      statusText: response.statusText,\n      errorText\n    });\n\n    // Handle specific credit limit error\n    if (response.status === 402) {\n      throw new Error('OpenRouter credits exhausted. Please visit https://openrouter.ai/settings/credits to add more credits or upgrade your account.');\n    }\n    throw new Error(`OpenRouter API error: ${response.status} ${response.statusText} - ${errorText}`);\n  }\n  return response.json();\n}","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","REACT_APP_API_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","data","post","register","logout","me","get","proposalsAPI","getAll","params","getById","id","update","put","delete","generate","publish","duplicate","sendEmail","sendProposal","downloadPDF","responseType","getByClient","clientName","getEmailTrackingStats","getAccessRequests","grantAccessRequest","requestId","templatesAPI","snippetsAPI","incrementUsage","caseStudiesAPI","pricingAPI","analyticsAPI","getDashboard","getProposals","organizationsAPI","getCurrent","getBrandSettings","updateBrandSettings","usersAPI","getProfile","updateProfile","changePassword","publicAPI","getProposal","accessCode","submitFeedback","requestAccess","clientsAPI","commentsAPI","getByProposal","proposalId","getUnreadCount","teamsAPI","addMember","teamId","updateMember","memberId","removeMember","notificationAPI","markAsRead","notificationId","markAllAsRead","getOpenRouterChatCompletion","messages","model","_messages$","_messages$$content","API_KEY","REACT_APP_OPENROUTER_API_KEY","requestBody","max_tokens","temperature","console","log","messageCount","length","firstMessage","content","substring","maxTokens","fetch","method","body","JSON","stringify","ok","errorText","text","statusText","Error","json"],"sources":["/Users/davnishsingh/Documents/proposalai-main/proposalai/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// In development, use relative URLs to work with the proxy\n// In production, use the full URL\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? (process.env.REACT_APP_API_URL || 'http://localhost:3000/api')\n  : 'http://localhost:3001/api';\n\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true, // Enable credentials for CORS\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const authAPI = {\n  login: (data: { email: string; password: string }) =>\n    api.post('/auth/login', data),\n  register: (data: any) => api.post('/auth/register', data),\n  logout: () => api.post('/auth/logout'),\n  me: () => api.get('/auth/me'),\n};\n\nexport const proposalsAPI = {\n  getAll: (params?: any) => api.get('/proposals', { params }),\n  getById: (id: string) => api.get(`/proposals/${id}`),\n  create: (data: any) => api.post('/proposals', data),\n  update: (id: string, data: any) => api.put(`/proposals/${id}`, data),\n  delete: (id: string) => api.delete(`/proposals/${id}`),\n  generate: (data: any) => api.post('/proposals/generate', data),\n  publish: (id: string) => api.post(`/proposals/${id}/publish`),\n  duplicate: (id: string) => api.post(`/proposals/${id}/duplicate`),\n  sendEmail: (id: string, data: { recipientEmail: string; customMessage?: string }) => \n    api.post(`/proposals/${id}/send-email`, data),\n  sendProposal: (id: string, data: { email: string }) => \n    api.post(`/proposals/${id}/send-email`, data),\n  downloadPDF: (id: string) => api.get(`/proposals/${id}/download-pdf`, { responseType: 'blob' }),\n  getByClient: (clientName: string) => api.get('/proposals', { params: { clientName } }),\n  getEmailTrackingStats: (id: string) => api.get(`/email-tracking/stats/${id}`),\n  getAccessRequests: (id: string) => api.get(`/proposals/${id}/access-requests`),\n  grantAccessRequest: (id: string, requestId: string) => api.post(`/proposals/${id}/access-requests/${requestId}/grant`),\n};\n\nexport const templatesAPI = {\n  getAll: (params?: any) => api.get('/templates', { params }),\n  getById: (id: string) => api.get(`/templates/${id}`),\n  create: (data: any) => api.post('/templates', data),\n  update: (id: string, data: any) => api.put(`/templates/${id}`, data),\n  delete: (id: string) => api.delete(`/templates/${id}`),\n};\n\nexport const snippetsAPI = {\n  getAll: (params?: any) => api.get('/snippets', { params }),\n  getById: (id: string) => api.get(`/snippets/${id}`),\n  create: (data: any) => api.post('/snippets', data),\n  update: (id: string, data: any) => api.put(`/snippets/${id}`, data),\n  delete: (id: string) => api.delete(`/snippets/${id}`),\n  incrementUsage: (id: string) => api.post(`/snippets/${id}/increment-usage`),\n};\n\nexport const caseStudiesAPI = {\n  getAll: (params?: any) => api.get('/case-studies', { params }),\n  getById: (id: string) => api.get(`/case-studies/${id}`),\n  create: (data: any) => api.post('/case-studies', data),\n  update: (id: string, data: any) => api.put(`/case-studies/${id}`, data),\n  delete: (id: string) => api.delete(`/case-studies/${id}`),\n};\n\nexport const pricingAPI = {\n  getAll: (params?: any) => api.get('/pricing', { params }),\n  getById: (id: string) => api.get(`/pricing/${id}`),\n  create: (data: any) => api.post('/pricing', data),\n  update: (id: string, data: any) => api.put(`/pricing/${id}`, data),\n  delete: (id: string) => api.delete(`/pricing/${id}`),\n};\n\nexport const analyticsAPI = {\n  getDashboard: () => api.get('/analytics'),\n  getProposals: (params?: any) => api.get('/analytics', { params }),\n};\n\nexport const organizationsAPI = {\n  getCurrent: () => api.get('/organizations/current'),\n  update: (data: any) => api.put('/organizations/current', data),\n  getBrandSettings: () => api.get('/organizations/brand-settings'),\n  updateBrandSettings: (data: any) => api.put('/organizations/brand-settings', data),\n};\n\nexport const usersAPI = {\n  getProfile: () => api.get('/users/profile'),\n  updateProfile: (data: any) => api.put('/users/profile', data),\n  changePassword: (data: any) => api.put('/users/password', data),\n};\n\nexport const publicAPI = {\n  getProposal: (id: string, accessCode?: string) => \n    api.get(`/public/proposals/${id}${accessCode ? `?accessCode=${accessCode}` : ''}`),\n  submitFeedback: (id: string, data: { accessCode: string; action: string; comment?: string }) =>\n    api.post(`/public/proposals/${id}/feedback`, data),\n  requestAccess: (id: string, data: { name: string; email: string; company?: string; reason?: string }) =>\n    api.post(`/public/proposals/${id}/request-access`, data),\n}; \n\nexport const clientsAPI = {\n  getAll: (params?: any) => api.get('/clients', { params }),\n  getById: (id: string) => api.get(`/clients/${id}`),\n  create: (data: any) => api.post('/clients', data),\n  update: (id: string, data: any) => api.put(`/clients/${id}`, data),\n  delete: (id: string) => api.delete(`/clients/${id}`),\n};\n\nexport const commentsAPI = {\n  getByProposal: (proposalId: string, params?: any) => \n    api.get(`/comments/proposal/${proposalId}`, { params }),\n  getUnreadCount: (proposalId: string) => \n    api.get(`/comments/proposal/${proposalId}/unread`),\n  create: (proposalId: string, data: { content: string; position?: any }) => \n    api.post(`/comments/proposal/${proposalId}`, data),\n  update: (id: string, data: { content: string; position?: any }) => \n    api.put(`/comments/${id}`, data),\n  delete: (id: string) => api.delete(`/comments/${id}`),\n};\n\nexport const teamsAPI = {\n  getAll: (params?: any) => api.get('/teams', { params }),\n  getById: (id: string) => api.get(`/teams/${id}`),\n  create: (data: { name: string; description?: string }) => \n    api.post('/teams', data),\n  update: (id: string, data: { name: string; description?: string }) => \n    api.put(`/teams/${id}`, data),\n  delete: (id: string) => api.delete(`/teams/${id}`),\n  addMember: (teamId: string, data: { userId: string; role?: string }) =>\n    api.post(`/teams/${teamId}/members`, data),\n  updateMember: (teamId: string, memberId: string, data: { role: string }) =>\n    api.put(`/teams/${teamId}/members/${memberId}`, data),\n  removeMember: (teamId: string, memberId: string) =>\n    api.delete(`/teams/${teamId}/members/${memberId}`),\n  getProposals: (teamId: string, params?: any) =>\n    api.get(`/teams/${teamId}/proposals`, { params }),\n};\n\n// Notification API\nexport const notificationAPI = {\n  // Get all notifications for the current user\n  getAll: () => api.get('/notifications'),\n  \n  // Get unread notification count\n  getUnreadCount: () => api.get('/notifications/unread-count'),\n  \n  // Mark notification as read\n  markAsRead: (notificationId: string) => api.put(`/notifications/${notificationId}/read`),\n  \n  // Mark all notifications as read\n  markAllAsRead: () => api.put('/notifications/mark-all-read'),\n  \n  // Get proposal-specific notifications\n  getByProposal: (proposalId: string) => api.get(`/notifications/proposal/${proposalId}`),\n};\n\n/**\n * Call OpenRouter's DeepSeek model (or any OpenRouter model) using OpenAI-compatible API.\n * Usage:\n *   const result = await getOpenRouterChatCompletion([\n *     { role: 'user', content: 'Hello, who are you?' }\n *   ]);\n */\nexport async function getOpenRouterChatCompletion(messages: Array<{ role: string; content: string }>, model = \"deepseek/deepseek-chat\") {\n  const API_BASE_URL = \"https://openrouter.ai/api/v1\";\n  // It's best to store your API key in an environment variable for security\n  const API_KEY = process.env.REACT_APP_OPENROUTER_API_KEY || \"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\";\n\n  const requestBody = {\n    model,\n    messages,\n    max_tokens: 400, // Reduced from 800 to work within current credit limits (475 available)\n    temperature: 0.7,\n  };\n\n  console.log('üîç Sending request to OpenRouter:', {\n    model,\n    messageCount: messages.length,\n    firstMessage: messages[0]?.content?.substring(0, 50) + '...',\n    maxTokens: requestBody.max_tokens\n  });\n\n  const response = await fetch(`${API_BASE_URL}/chat/completions`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${API_KEY}`,\n      \"HTTP-Referer\": \"http://localhost:3000\", // Required by OpenRouter\n      \"X-Title\": \"ProposalAI\", // Optional but recommended\n    },\n    body: JSON.stringify(requestBody),\n  });\n\n  if (!response.ok) {\n    const errorText = await response.text();\n    console.error('üö® OpenRouter API Error Details:', {\n      status: response.status,\n      statusText: response.statusText,\n      errorText\n    });\n    \n    // Handle specific credit limit error\n    if (response.status === 402) {\n      throw new Error('OpenRouter credits exhausted. Please visit https://openrouter.ai/settings/credits to add more credits or upgrade your account.');\n    }\n    \n    throw new Error(`OpenRouter API error: ${response.status} ${response.statusText} - ${errorText}`);\n  }\n  \n  return response.json();\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}