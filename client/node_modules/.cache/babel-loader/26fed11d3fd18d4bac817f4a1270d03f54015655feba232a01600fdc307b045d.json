{"ast":null,"code":"export const sendProposalEmail=async emailData=>{try{const response=await fetch('/api/proposals/send-email',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({to:emailData.clientEmail,subject:emailData.subject,message:emailData.message,clientName:emailData.clientName,clientEmail:emailData.clientEmail})});if(!response.ok){throw new Error('Failed to send email');}const result=await response.json();return result;}catch(error){console.error('Error sending email:',error);throw error;}};","map":{"version":3,"names":["sendProposalEmail","emailData","response","fetch","method","headers","body","JSON","stringify","to","clientEmail","subject","message","clientName","ok","Error","result","json","error","console"],"sources":["/Users/davnishsingh/Documents/proposalai-main/proposalai/client/src/services/emailService.ts"],"sourcesContent":["export interface EmailData {\n  to: string;\n  subject: string;\n  message: string;\n  clientName: string;\n  clientEmail: string;\n}\n\nexport const sendProposalEmail = async (emailData: EmailData): Promise<void> => {\n  try {\n    const response = await fetch('/api/proposals/send-email', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        to: emailData.clientEmail,\n        subject: emailData.subject,\n        message: emailData.message,\n        clientName: emailData.clientName,\n        clientEmail: emailData.clientEmail\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to send email');\n    }\n\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Error sending email:', error);\n    throw error;\n  }\n}; "],"mappings":"AAQA,MAAO,MAAM,CAAAA,iBAAiB,CAAG,KAAO,CAAAC,SAAoB,EAAoB,CAC9E,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,2BAA2B,CAAE,CACxDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,EAAE,CAAER,SAAS,CAACS,WAAW,CACzBC,OAAO,CAAEV,SAAS,CAACU,OAAO,CAC1BC,OAAO,CAAEX,SAAS,CAACW,OAAO,CAC1BC,UAAU,CAAEZ,SAAS,CAACY,UAAU,CAChCH,WAAW,CAAET,SAAS,CAACS,WACzB,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAACR,QAAQ,CAACY,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CACzC,CAEA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAd,QAAQ,CAACe,IAAI,CAAC,CAAC,CACpC,MAAO,CAAAD,MAAM,CACf,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}